#!/bin/bash
# _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
# _   _ ____  _____ ____  __  __ _____ _   _ _   _ 
#| | | / ___|| ____|  _ \|  \/  | ____| \ | | | | |
#| | | \___ \|  _| | |_) | |\/| |  _| |  \| | | | |
#| |_| |___) | |___|  _ <| |  | | |___| |\  | |_| |
# \___/|____/|_____|_| \_\_|  |_|_____|_| \_|\___/ 
#
#Created by Dale Scott!
#
# _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

# Stops the script not being used without running master.txt first
[ -z $CALLED_FROM_START_APP ] && { echo "Not called from master.txt"; exit 42; }

# makes the colors easier to add in
black='\e[30m'
red='\e[31m'
green='\e[32m'
yellow='\e[33m'
blue='\e[34m'
magenta='\e[35m'
cyan='\e[36m'
gray='\e[37m'
white='\e[0m'

clear

while : # starts loop
do

	clear

	echo -e $cyan'User menu'$white
	# This will list out the options in the menu!
	option=( 'Create User(1)' 'Change group for a user(2)' 'Create a group(3)' 'Delete User(4)' 'Change Password(5)' 'Exit(6)' 'Shutdown(7)' )
	echo ====================================================
	for element in "${option[@]}"
	do
		echo -e $green": $element"$white
	done
	echo ====================================================

	read -p 'What to you want to do: ' act
	user=${act,,}

	echo ' '

	case $user in
		useradd | 1)
			echo -e $cyan'Create a user'$white
			read -p 'What is the name of the user you want to create?: ' var1
			
			if grep -q $user /etc/passwd # checks if the user is really there
			then
				echo The User exists! So no reason to recreate it!
			else
				echo Creating user!
				useradd $var1
				cat /etc/passwd | grep $var1 #shows the new user
				read -p 'Continue (Press enter)'
			fi
			;;
		chgroup | 2)
			while : 
			do
				echo -e $cyan'Adds a group for a User'$white
				echo ' '
				read -p 'What user would you like to modify?: ' var2
				read -p 'What group would you like to add to the the user?: ' var3
				if grep -q $var2 /etc/passwd && [ getent group $var3 ]; then #makes sure the user and group exists
					echo -e $green'Add the group to user, or override existing groups'$white
					echo -e $grey'Numbers only'$white
					read -p 'Add to user(1), Override goups(2), Cancel(3)' var10
					var10=${chgroup,,}
					case $chgroup in # Picking for adding/override groups
						1)
							echo $green'Adding group'$white
							usermod -a -G $var3 $var2 # '-a' adds the group to the user 
							echo ' '
							cat /etc/group | grep $var2 # shows the groups that the user is in
							read -p 'Continue (Press enter)'
							exit
							;;
						2)
							echo $green'Overriding groups'$white
							usermod -G $var3 $var2 # overrides the existing groups on the user
							echo ' '
							cat /etc/group | grep $var2 # shows the groups the user is in
							read -p 'Continue (Press enter)'
							exit
							;;
						3)
							exit
							;;
						*)
							echo -e $red'Wrong input'$white
							;;
					esac
				else
					echo -e $red'Wrong input'$white
				fi
			done	
			;;
		groupadd | 3)
			echo -e $cyan'Create a group'$white
			read -p 'What is the name of the group you want to create: ' var5
			if [ $(getent group $var5) ]; then #finds if the group exists
				echo -e $red"The group already exists! no reason to create it"$white #does not make the group if it is already there
			else
				echo $green"The group does not exist. Creating group"$white #if the group does not exist it's created
				groupadd $var5
				cat /etc/groups | grep $var5 #lists out the group
				sleep 3
			fi
			;;
		userdel | 4)
			echo -e $cyan'Delete a user'$white
			echo ' '
			echo ' '
			echo -e $red'WARNING: THIS WILL DELETE ALL USERS FILES'$white
			echo -e $red'PROCEED WITH CAUTION'$ehite
			echo ' '
			echo ' '
			read -p 'What user would you like to delete? ' var4 
			if grep -q /etc/passwd # Checks for user
			then
				echo -e $red'The user exists Deleting...'$white
				userdel -r $var4 #deletes a user
				users
				read -p 'Continue (Press enter)'
			else
				echo 'The user does not exist returning to file menu'
			fi
			;;
		passwd | 5)
			echo 'Change a users password'
			echo ' '
			read -p 'What user would you like to change the password of?: ' var6
			passwd $var6 #Changes the password of a user
			;;
		exit | 6)
			exit
			;;
		shutdown | shut | 7)
			shutdown now
			;;
		*)
			echo -e $red'Wrong input'$white
			echo ' '
			read -p 'Continue (Press enter)'	
			;;
	esac
done
